<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<display-name>workarts</display-name>

	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>workarts</param-value>
	</context-param>

	<!-- spring.profiles.active가 설정되지 않은 경우 실서버로 처리. 로컬에서 개발머신에는 local로 프로파일 설정필요 -->
	<context-param>
		<param-name>spring.profiles.default</param-name>
		<param-value>real</param-value>
	</context-param>

	<!-- Application Context Initializer -->
    <context-param>
		<param-name>contextInitializerClasses</param-name>
		<param-value>framework.spring.context.AbleApplicationContextInitializer</param-value>
	</context-param>
	
	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param>
		<param-name>contextClass</param-name>
		<param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
	</context-param>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
        	spring.RootConfig
        	spring.GlobalSecurityConfig
        	spring.WebSecurityConfig
        	spring.MethodSecurityConfig
       	</param-value>
    </context-param>

	<!-- Listener ======================================================================= -->
	<!-- Bootstrap the root application context as usual using ContextLoaderListener -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Spring Security Concurrent Session Support -->
	<listener>
		<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener>

	<!-- Filter ======================================================================= -->
	<!-- LOG CUSTOM MDC Inserting Filter -->
	<filter>
    	<filter-name>ableMDCInsertingFilter</filter-name>
    	<filter-class>framework.servlet.filter.AbleLogMDCInsertingFilter</filter-class>
    </filter>
	<filter-mapping>
		<filter-name>ableMDCInsertingFilter</filter-name>
	    <servlet-name>appServlet</servlet-name>
	</filter-mapping>
	
	<!-- Filter: AbleCommonsRequestLoggingFilter -->
	<filter>
	    <filter-name>ableRequestLoggingFilter</filter-name>
	    <filter-class>framework.servlet.filter.AbleCommonsRequestLoggingFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>ableRequestLoggingFilter</filter-name>
	    <servlet-name>appServlet</servlet-name>
	</filter-mapping>
	
	<!-- Filter: ShallowEtagHeaderFilter -->
	<filter>
	    <filter-name>etagFilter</filter-name>
	    <filter-class>org.springframework.web.filter.ShallowEtagHeaderFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>etagFilter</filter-name>
	    <servlet-name>appServlet</servlet-name>
	</filter-mapping>

	<!-- Filter: CharacterEncodingFilter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<servlet-name>appServlet</servlet-name>
	</filter-mapping>
	
	<!-- Filter: HiddenHttpMethodFilter -->
	<filter>
	    <filter-name>httpMethodFilter</filter-name>
	    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>httpMethodFilter</filter-name>
	    <servlet-name>appServlet</servlet-name>
	</filter-mapping>
	
	<!-- Filter: HttpPutFormContentFilter -->
	<filter>
	    <filter-name>httpPutFormFilter</filter-name>
	    <filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>httpPutFormFilter</filter-name>
	    <servlet-name>appServlet</servlet-name>
	</filter-mapping>
	
		<!-- Spring Security Filter. springSecurityFilterChain -->
	<filter>
	    <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
   	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- Servlet ======================================================================= -->
	<!-- Declare a Spring MVC DispatcherServlet -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextClass</param-name>
			<param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
		</init-param>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>
            	spring.appservlet.AppComponentConfig
            	spring.appservlet.AppServletConfig
           	</param-value>
        </init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>

</web-app>
