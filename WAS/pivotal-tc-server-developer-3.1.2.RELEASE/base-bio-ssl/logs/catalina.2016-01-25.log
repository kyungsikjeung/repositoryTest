1월 25, 2016 7:54:50 오후 com.springsource.tcserver.security.PropertyDecoder <init>
정보: tc Runtime property decoder using memory-based key
1월 25, 2016 7:54:50 오후 com.springsource.tcserver.security.TcDecoder initCiphers
정보: Initializing ciphers
1월 25, 2016 7:54:53 오후 com.springsource.tcserver.security.PropertyDecoder <init>
정보: tcServer Runtime property decoder has been initialized in 3028 ms
1월 25, 2016 7:54:57 오후 org.apache.coyote.AbstractProtocol init
정보: Initializing ProtocolHandler ["http-bio-80"]
1월 25, 2016 7:54:57 오후 org.apache.coyote.AbstractProtocol init
정보: Initializing ProtocolHandler ["http-bio-8443"]
1월 25, 2016 7:55:00 오후 com.springsource.tcserver.serviceability.rmi.JmxSocketListener init
정보: Started up JMX registry on 127.0.0.1:6969 in 444 ms
1월 25, 2016 7:55:00 오후 org.apache.catalina.core.StandardService startInternal
정보: Starting service Catalina
1월 25, 2016 7:55:00 오후 org.apache.catalina.core.StandardEngine startInternal
정보: Starting Servlet Engine: Pivotal tc Runtime 3.1.2.RELEASE/7.0.64.B.RELEASE
1월 25, 2016 7:55:19 오후 org.apache.catalina.startup.TldConfig execute
정보: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
1월 25, 2016 7:55:29 오후 org.apache.catalina.core.StandardContext startInternal
심각: One or more listeners failed to start. Full details will be found in the appropriate container log file
1월 25, 2016 7:55:29 오후 org.apache.catalina.core.StandardContext startInternal
심각: Context [/workarts] startup failed due to previous errors
1월 25, 2016 7:55:29 오후 org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
심각: The web application [/workarts] appears to have started a thread named [FileSystemWatcher: files=#100 cl=WebappClassLoader
  context: /workarts
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
org.apache.catalina.loader.StandardClassLoader@2301ba21
] but has failed to stop it. This is very likely to create a memory leak.
1월 25, 2016 7:55:29 오후 org.apache.catalina.startup.HostConfig deployDirectory
정보: Deploying web application directory C:\Java\pivotal-tc-server-developer-3.1.2.RELEASE\base-bio-ssl\webapps\manager
1월 25, 2016 7:55:29 오후 org.apache.catalina.startup.TldConfig execute
정보: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
1월 25, 2016 7:55:29 오후 org.apache.catalina.startup.HostConfig deployDirectory
정보: Deployment of web application directory C:\Java\pivotal-tc-server-developer-3.1.2.RELEASE\base-bio-ssl\webapps\manager has finished in 640 ms
1월 25, 2016 7:55:29 오후 org.apache.catalina.startup.HostConfig deployDirectory
정보: Deploying web application directory C:\Java\pivotal-tc-server-developer-3.1.2.RELEASE\base-bio-ssl\webapps\ROOT
1월 25, 2016 7:55:30 오후 org.apache.catalina.startup.TldConfig execute
정보: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
1월 25, 2016 7:55:30 오후 org.apache.catalina.startup.HostConfig deployDirectory
정보: Deployment of web application directory C:\Java\pivotal-tc-server-developer-3.1.2.RELEASE\base-bio-ssl\webapps\ROOT has finished in 530 ms
1월 25, 2016 7:55:30 오후 org.apache.coyote.AbstractProtocol start
정보: Starting ProtocolHandler ["http-bio-80"]
1월 25, 2016 7:55:30 오후 org.apache.coyote.AbstractProtocol start
정보: Starting ProtocolHandler ["http-bio-8443"]
1월 25, 2016 7:59:13 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load kr.co.workarts.common.dao.ApplyMusicDAO__I.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 7:59:13 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 7:59:13 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load kr.co.workarts.common.vo.ApplyMusicDT__I.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 7:59:13 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 7:59:13 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load kr.co.workarts.biz.festival.music.service.MusicServiceEx__I.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 7:59:13 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 7:59:24 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load kr.co.workarts.common.vo.ApplyActDT__I.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 7:59:24 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 7:59:25 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load kr.co.workarts.common.dao.ApplyActDAO__I.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 7:59:25 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 7:59:47 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 7:59:47 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load kr.co.workarts.common.service.ApplyMusicService__I.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 7:59:47 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:00:05 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:00:15 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:00:55 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:00:55 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load kr.co.workarts.common.service.ApplyActService__I.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:00:55 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:01:29 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:02:01 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:02:14 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:03:12 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:03:56 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:07:02 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:07:08 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:07:20 오후 com.springsource.tcserver.security.PropertyDecoder <init>
정보: tc Runtime property decoder using memory-based key
1월 25, 2016 8:07:20 오후 com.springsource.tcserver.security.TcDecoder initCiphers
정보: Initializing ciphers
1월 25, 2016 8:07:21 오후 com.springsource.tcserver.security.PropertyDecoder <init>
정보: tcServer Runtime property decoder has been initialized in 574 ms
1월 25, 2016 8:07:22 오후 org.apache.coyote.AbstractProtocol init
정보: Initializing ProtocolHandler ["http-bio-80"]
1월 25, 2016 8:07:22 오후 org.apache.coyote.AbstractProtocol init
정보: Initializing ProtocolHandler ["http-bio-8443"]
1월 25, 2016 8:07:22 오후 com.springsource.tcserver.serviceability.rmi.JmxSocketListener init
정보: Started up JMX registry on 127.0.0.1:6969 in 114 ms
1월 25, 2016 8:07:22 오후 org.apache.catalina.core.StandardService startInternal
정보: Starting service Catalina
1월 25, 2016 8:07:22 오후 org.apache.catalina.core.StandardEngine startInternal
정보: Starting Servlet Engine: Pivotal tc Runtime 3.1.2.RELEASE/7.0.64.B.RELEASE
1월 25, 2016 8:07:30 오후 org.apache.catalina.startup.TldConfig execute
정보: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
1월 25, 2016 8:07:38 오후 org.apache.catalina.core.StandardContext startInternal
심각: One or more listeners failed to start. Full details will be found in the appropriate container log file
1월 25, 2016 8:07:38 오후 org.apache.catalina.core.StandardContext startInternal
심각: Context [/workarts] startup failed due to previous errors
1월 25, 2016 8:07:38 오후 org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
심각: The web application [/workarts] appears to have started a thread named [FileSystemWatcher: files=#108 cl=WebappClassLoader
  context: /workarts
  delegate: false
  repositories:
    /WEB-INF/classes/
----------> Parent Classloader:
org.apache.catalina.loader.StandardClassLoader@4662de7b
] but has failed to stop it. This is very likely to create a memory leak.
1월 25, 2016 8:07:38 오후 org.apache.catalina.startup.HostConfig deployDirectory
정보: Deploying web application directory C:\Java\pivotal-tc-server-developer-3.1.2.RELEASE\base-bio-ssl\webapps\manager
1월 25, 2016 8:07:38 오후 org.apache.catalina.startup.TldConfig execute
정보: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
1월 25, 2016 8:07:38 오후 org.apache.catalina.startup.HostConfig deployDirectory
정보: Deployment of web application directory C:\Java\pivotal-tc-server-developer-3.1.2.RELEASE\base-bio-ssl\webapps\manager has finished in 156 ms
1월 25, 2016 8:07:38 오후 org.apache.catalina.startup.HostConfig deployDirectory
정보: Deploying web application directory C:\Java\pivotal-tc-server-developer-3.1.2.RELEASE\base-bio-ssl\webapps\ROOT
1월 25, 2016 8:07:38 오후 org.apache.catalina.startup.TldConfig execute
정보: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
1월 25, 2016 8:07:38 오후 org.apache.catalina.startup.HostConfig deployDirectory
정보: Deployment of web application directory C:\Java\pivotal-tc-server-developer-3.1.2.RELEASE\base-bio-ssl\webapps\ROOT has finished in 140 ms
1월 25, 2016 8:07:38 오후 org.apache.coyote.AbstractProtocol start
정보: Starting ProtocolHandler ["http-bio-80"]
1월 25, 2016 8:07:38 오후 org.apache.coyote.AbstractProtocol start
정보: Starting ProtocolHandler ["http-bio-8443"]
1월 25, 2016 8:11:34 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load kr.co.workarts.common.dao.ApplyActDAO__I.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:11:34 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:11:43 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load kr.co.workarts.common.dao.ApplyMusicDAO__I.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:11:43 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:12:06 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load kr.co.workarts.common.dao.ApplyDAO__I.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:12:06 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:12:06 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load kr.co.workarts.common.service.ApplyService__I.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:12:06 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:12:06 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load kr.co.workarts.biz.festival.music.service.MusicServiceEx__I.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:12:06 오후 org.apache.catalina.loader.WebappClassLoader loadClass
정보: Illegal access: this web application instance has been stopped already.  Could not load org.springsource.loaded.__DynamicallyDispatchable.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
java.lang.IllegalStateException
	at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1750)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:800)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:643)
	at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:37)
	at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1116)
	at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:111)
	at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:99)
	at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:390)
	at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:845)
	at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:51)
	at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:235)
	at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:219)
	at java.lang.Thread.run(Thread.java:745)

1월 25, 2016 8:12:06 오후 org.apache.catalina.loader.WebappClassLoader findResourceInternal
정보: Illegal access: this web application instance has been stopped already.  Could not load kr/co/workarts/biz/festival/common/vo/TeamMemberVO.class.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
1월 25, 2016 8:12:06 오후 org.apache.coyote.AbstractProtocol pause
정보: Pausing ProtocolHandler ["http-bio-80"]
1월 25, 2016 8:12:07 오후 org.apache.coyote.AbstractProtocol pause
정보: Pausing ProtocolHandler ["http-bio-8443"]
1월 25, 2016 8:12:07 오후 org.apache.catalina.core.StandardService stopInternal
정보: Stopping service Catalina
1월 25, 2016 8:12:07 오후 org.apache.coyote.AbstractProtocol stop
정보: Stopping ProtocolHandler ["http-bio-80"]
1월 25, 2016 8:12:07 오후 org.apache.coyote.AbstractProtocol stop
정보: Stopping ProtocolHandler ["http-bio-8443"]
1월 25, 2016 8:12:12 오후 com.springsource.tcserver.security.PropertyDecoder <init>
정보: tc Runtime property decoder using memory-based key
1월 25, 2016 8:12:12 오후 com.springsource.tcserver.security.TcDecoder initCiphers
정보: Initializing ciphers
1월 25, 2016 8:12:12 오후 com.springsource.tcserver.security.PropertyDecoder <init>
정보: tcServer Runtime property decoder has been initialized in 547 ms
1월 25, 2016 8:12:13 오후 org.apache.coyote.AbstractProtocol init
정보: Initializing ProtocolHandler ["http-bio-80"]
1월 25, 2016 8:12:13 오후 org.apache.coyote.AbstractProtocol init
정보: Initializing ProtocolHandler ["http-bio-8443"]
1월 25, 2016 8:12:14 오후 com.springsource.tcserver.serviceability.rmi.JmxSocketListener init
정보: Started up JMX registry on 127.0.0.1:6969 in 67 ms
1월 25, 2016 8:12:14 오후 org.apache.catalina.core.StandardService startInternal
정보: Starting service Catalina
1월 25, 2016 8:12:14 오후 org.apache.catalina.core.StandardEngine startInternal
정보: Starting Servlet Engine: Pivotal tc Runtime 3.1.2.RELEASE/7.0.64.B.RELEASE
1월 25, 2016 8:12:20 오후 org.apache.catalina.startup.TldConfig execute
정보: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
1월 25, 2016 8:12:32 오후 org.apache.catalina.startup.HostConfig deployDirectory
정보: Deploying web application directory C:\Java\pivotal-tc-server-developer-3.1.2.RELEASE\base-bio-ssl\webapps\manager
1월 25, 2016 8:12:32 오후 org.apache.catalina.startup.TldConfig execute
정보: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
1월 25, 2016 8:12:32 오후 org.apache.catalina.startup.HostConfig deployDirectory
정보: Deployment of web application directory C:\Java\pivotal-tc-server-developer-3.1.2.RELEASE\base-bio-ssl\webapps\manager has finished in 140 ms
1월 25, 2016 8:12:32 오후 org.apache.catalina.startup.HostConfig deployDirectory
정보: Deploying web application directory C:\Java\pivotal-tc-server-developer-3.1.2.RELEASE\base-bio-ssl\webapps\ROOT
1월 25, 2016 8:12:32 오후 org.apache.catalina.startup.TldConfig execute
정보: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
1월 25, 2016 8:12:32 오후 org.apache.catalina.startup.HostConfig deployDirectory
정보: Deployment of web application directory C:\Java\pivotal-tc-server-developer-3.1.2.RELEASE\base-bio-ssl\webapps\ROOT has finished in 173 ms
1월 25, 2016 8:12:32 오후 org.apache.coyote.AbstractProtocol start
정보: Starting ProtocolHandler ["http-bio-80"]
1월 25, 2016 8:12:32 오후 org.apache.coyote.AbstractProtocol start
정보: Starting ProtocolHandler ["http-bio-8443"]
1월 25, 2016 8:12:59 오후 org.apache.jasper.compiler.TldLocationsCache tldScanJar
정보: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
1월 25, 2016 9:17:22 오후 com.springsource.tcserver.security.PropertyDecoder <init>
정보: tc Runtime property decoder using memory-based key
1월 25, 2016 9:17:22 오후 com.springsource.tcserver.security.TcDecoder initCiphers
정보: Initializing ciphers
1월 25, 2016 9:17:23 오후 com.springsource.tcserver.security.PropertyDecoder <init>
정보: tcServer Runtime property decoder has been initialized in 554 ms
1월 25, 2016 9:17:23 오후 org.apache.coyote.AbstractProtocol init
정보: Initializing ProtocolHandler ["http-bio-80"]
1월 25, 2016 9:17:23 오후 org.apache.coyote.AbstractProtocol init
정보: Initializing ProtocolHandler ["http-bio-8443"]
1월 25, 2016 9:17:24 오후 com.springsource.tcserver.serviceability.rmi.JmxSocketListener init
정보: Started up JMX registry on 127.0.0.1:6969 in 196 ms
1월 25, 2016 9:17:24 오후 org.apache.catalina.core.StandardService startInternal
정보: Starting service Catalina
1월 25, 2016 9:17:24 오후 org.apache.catalina.core.StandardEngine startInternal
정보: Starting Servlet Engine: Pivotal tc Runtime 3.1.2.RELEASE/7.0.64.B.RELEASE
1월 25, 2016 9:17:32 오후 org.apache.catalina.startup.TldConfig execute
정보: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
1월 25, 2016 9:17:45 오후 org.apache.catalina.startup.HostConfig deployDirectory
정보: Deploying web application directory C:\Java\pivotal-tc-server-developer-3.1.2.RELEASE\base-bio-ssl\webapps\manager
1월 25, 2016 9:17:45 오후 org.apache.catalina.startup.TldConfig execute
정보: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
1월 25, 2016 9:17:45 오후 org.apache.catalina.startup.HostConfig deployDirectory
정보: Deployment of web application directory C:\Java\pivotal-tc-server-developer-3.1.2.RELEASE\base-bio-ssl\webapps\manager has finished in 158 ms
1월 25, 2016 9:17:45 오후 org.apache.catalina.startup.HostConfig deployDirectory
정보: Deploying web application directory C:\Java\pivotal-tc-server-developer-3.1.2.RELEASE\base-bio-ssl\webapps\ROOT
1월 25, 2016 9:17:45 오후 org.apache.catalina.startup.TldConfig execute
정보: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
1월 25, 2016 9:17:45 오후 org.apache.catalina.startup.HostConfig deployDirectory
정보: Deployment of web application directory C:\Java\pivotal-tc-server-developer-3.1.2.RELEASE\base-bio-ssl\webapps\ROOT has finished in 113 ms
1월 25, 2016 9:17:45 오후 org.apache.coyote.AbstractProtocol start
정보: Starting ProtocolHandler ["http-bio-80"]
1월 25, 2016 9:17:45 오후 org.apache.coyote.AbstractProtocol start
정보: Starting ProtocolHandler ["http-bio-8443"]
1월 25, 2016 9:38:23 오후 org.apache.jasper.compiler.TldLocationsCache tldScanJar
정보: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
1월 25, 2016 9:48:39 오후 com.springsource.tcserver.security.PropertyDecoder <init>
정보: tc Runtime property decoder using memory-based key
1월 25, 2016 9:48:39 오후 com.springsource.tcserver.security.TcDecoder initCiphers
정보: Initializing ciphers
1월 25, 2016 9:48:39 오후 com.springsource.tcserver.security.PropertyDecoder <init>
정보: tcServer Runtime property decoder has been initialized in 517 ms
1월 25, 2016 9:48:40 오후 org.apache.coyote.AbstractProtocol init
정보: Initializing ProtocolHandler ["http-bio-80"]
1월 25, 2016 9:48:40 오후 org.apache.coyote.AbstractProtocol init
정보: Initializing ProtocolHandler ["http-bio-8443"]
1월 25, 2016 9:48:41 오후 com.springsource.tcserver.serviceability.rmi.JmxSocketListener init
정보: Started up JMX registry on 127.0.0.1:6969 in 180 ms
1월 25, 2016 9:48:41 오후 org.apache.catalina.core.StandardService startInternal
정보: Starting service Catalina
1월 25, 2016 9:48:41 오후 org.apache.catalina.core.StandardEngine startInternal
정보: Starting Servlet Engine: Pivotal tc Runtime 3.1.2.RELEASE/7.0.64.B.RELEASE
1월 25, 2016 9:48:48 오후 org.apache.catalina.startup.TldConfig execute
정보: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
1월 25, 2016 9:49:01 오후 org.apache.catalina.startup.HostConfig deployDirectory
정보: Deploying web application directory C:\Java\pivotal-tc-server-developer-3.1.2.RELEASE\base-bio-ssl\webapps\manager
1월 25, 2016 9:49:01 오후 org.apache.catalina.startup.TldConfig execute
정보: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
1월 25, 2016 9:49:01 오후 org.apache.catalina.startup.HostConfig deployDirectory
정보: Deployment of web application directory C:\Java\pivotal-tc-server-developer-3.1.2.RELEASE\base-bio-ssl\webapps\manager has finished in 172 ms
1월 25, 2016 9:49:01 오후 org.apache.catalina.startup.HostConfig deployDirectory
정보: Deploying web application directory C:\Java\pivotal-tc-server-developer-3.1.2.RELEASE\base-bio-ssl\webapps\ROOT
1월 25, 2016 9:49:01 오후 org.apache.catalina.startup.TldConfig execute
정보: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
1월 25, 2016 9:49:01 오후 org.apache.catalina.startup.HostConfig deployDirectory
정보: Deployment of web application directory C:\Java\pivotal-tc-server-developer-3.1.2.RELEASE\base-bio-ssl\webapps\ROOT has finished in 124 ms
1월 25, 2016 9:49:01 오후 org.apache.coyote.AbstractProtocol start
정보: Starting ProtocolHandler ["http-bio-80"]
1월 25, 2016 9:49:01 오후 org.apache.coyote.AbstractProtocol start
정보: Starting ProtocolHandler ["http-bio-8443"]
1월 25, 2016 9:52:39 오후 org.apache.jasper.compiler.TldLocationsCache tldScanJar
정보: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
