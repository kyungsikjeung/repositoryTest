/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Pivotal tc Runtime 3.1.2.RELEASE/7.0.64.B.RELEASE
 * Generated at: 2016-02-05 10:02:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.biz.login.popup;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import framework.util.AbleUtil;
import org.joda.time.LocalDateTime;
import org.slf4j.LoggerFactory;
import org.slf4j.Logger;

public final class findPopup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/layouts/biz/include.jsp", Long.valueOf(1453120580394L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

Logger logger = LoggerFactory.getLogger(this.getClass());
boolean isDevelopment = !AbleUtil.isRealProfile();
pageContext.setAttribute("isDevelopment", isDevelopment);

//page attribute
//${contextPath}	: application이 배포된 contextPath (정적리소스는 이 경로를 Prefix로 반드시 붙일 것)
//${locale}			: Response에서 사용할 locale (지역화 기준)
//${serverDateTime}	: 서버시간
pageContext.setAttribute("contextPath", request.getContextPath());
pageContext.setAttribute("locale", response.getLocale().toString());
pageContext.setAttribute("localeDashed", response.getLocale().toString().replace("_", "-"));
pageContext.setAttribute("lang", response.getLocale().getLanguage());
pageContext.setAttribute("country", response.getLocale().getCountry());
pageContext.setAttribute("serverTime", LocalDateTime.now());

if(!Boolean.TRUE.equals(request.getAttribute("pageContextJavaScriptIncluded"))) {
	request.setAttribute("pageContextJavaScriptIncluded", Boolean.TRUE);

      out.write("\t<!-- Environment - isDevelopment: ");
      out.print(isDevelopment);
      out.write(' ');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${isDevelopment}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(" -->\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\twindow['contextPath'] = window['contextPath'] || \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\";\r\n");
      out.write("\t\twindow['locale'] = window['locale'] || \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${locale}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\";\r\n");
      out.write("\t\twindow['localeDashed'] = window['localeDashed'] || \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${localeDashed}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\";\r\n");
      out.write("\t\twindow['lang'] = window['lang'] || \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${lang}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\";\r\n");
      out.write("\t\twindow['country'] = window['country'] || \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${country}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\";\r\n");
      out.write("\t\twindow['serverTime'] = window['serverTime'] || \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${serverTime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\";\r\n");
      out.write("\t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t</script>\r\n");
	
}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\tspan.txt-ps.c-red.error > label {\r\n");
      out.write("\t    width: 100% !important;\r\n");
      out.write("\t    color: #FF0000 !important;\r\n");
      out.write("\t    font-weight: normal !important;\r\n");
      out.write("\t    font-size: 13px !important;\r\n");
      out.write("\t    margin: 0px !important;\r\n");
      out.write("\t    text-align: right !important;\r\n");
      out.write("\t    cursor: default !important;\r\n");
      out.write("\t}\r\n");
      out.write("\t.txt.tac2 {\r\n");
      out.write("\t\tfont-size: 12px !important;\r\n");
      out.write("\t\ttext-align: center !important;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<div class=\"ly-pop-wrap\" style=\"display: none;\">\r\n");
      out.write("\t<div class=\"ly-pop\">\r\n");
      out.write("\t\t<ul class=\"find-mn ofh\">\r\n");
      out.write("\t\t\t<li class=\"find-id on\"><a href=\"#\">아이디 찾기</a></li>\r\n");
      out.write("\t\t\t<li class=\"find-pw\"><a href=\"#\">비밀번호 찾기</a></li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t\t<div class=\"ct-find on\" data-bind=\"with: findIdVM\">\r\n");
      out.write("\t\t\t<h3 class=\"blind\">아이디 찾기</h3>\r\n");
      out.write("\t\t\t<form action=\"\" class=\"frm-find\" data-bind=\"visible: _.isEmpty(foundId())\">\r\n");
      out.write("\t\t\t\t<fieldset>\r\n");
      out.write("\t\t\t\t\t<legend class=\"blind\">아이디 찾기</legend>\r\n");
      out.write("\t\t\t\t\t<div class=\"lg-input ofh\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"user_id\">이메일 주소</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" id=\"email\" data-bind=\"value: email\" placeholder=\"\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"lg-input ofh\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"user_pw\">실명입력</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" id=\"userRealName\" data-bind=\"value: userRealName\" placeholder=\"\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"btn-wrap\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn-com\" data-bind=\"click: findId\">아이디 찾기</button>\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn-com btn-cancel\" data-bind=\"click: cancel\">취소</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</fieldset>\r\n");
      out.write("\t\t\t</form><!-- //.frm-find -->\r\n");
      out.write("\t\t\t<div class=\"find-result tac\" data-bind=\"visible: !_.isEmpty(foundId())\">\r\n");
      out.write("\t\t\t\t<p class=\"txt\">\r\n");
      out.write("\t\t\t\t\t회원님의 아이디는 <strong data-bind=\"text: foundId\">arirang2016</strong>입니다.<br>\r\n");
      out.write("\t\t\t\t\t로그인을 다시 시도해 주시기 바랍니다.\r\n");
      out.write("\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t<div class=\"btn-wrap\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn-com btn-ok\" data-bind=\"click: cancel\">확인</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div><!-- //.ct-find -->\r\n");
      out.write("\t\t<div class=\"ct-find\" data-bind=\"with: findPwVM\">\r\n");
      out.write("\t\t\t<h3 class=\"blind\">비밀번호 찾기</h3>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<form action=\"\" class=\"frm-find cer\" data-bind=\"visible: !foundPw()\">\r\n");
      out.write("\t\t\t\t<fieldset>\r\n");
      out.write("\t\t\t\t\t<legend class=\"blind\">비밀번호 찾기</legend>\r\n");
      out.write("\t\t\t\t\t<div class=\"lg-input ofh\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"user_id_find\">아이디</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" id=\"user_id_find\" data-bind=\"value: userId\" placeholder=\"\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"lg-input ofh\">\r\n");
      out.write("\t\t\t\t\t\t<h3 class=\"tit fl\">본인인증 선택</h3>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"certi fl\">\r\n");
      out.write("\t\t\t\t\t\t\t<ul class=\"ofh\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<li data-bind=\"click: ownerCertPhone\"><a href=\"#\" class=\"\"><img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/images/btn-phone-certi.jpg\" alt=\"휴대폰 인증\"></a></li>\r\n");
      out.write("\t\t\t\t\t\t\t\t<li data-bind=\"click: ownerCertIpin\"><a href=\"#\" class=\"\"><img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/images/btn-ipin-certi.jpg\" alt=\"아이핀 인증\"></a></li>\r\n");
      out.write("\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\t<span>본인 명의의 휴대폰 번호/아이핀으로 <br>본인인증이 가능합니다.</span>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div><!-- //.certi -->\r\n");
      out.write("\t\t\t\t\t<div class=\"txt-certi\">\r\n");
      out.write("\t\t\t\t\t\t<h3 class=\"tit\">인증관련 문의</h3>\r\n");
      out.write("\t\t\t\t\t\t<ul>\r\n");
      out.write("\t\t\t\t\t\t\t<li>- 휴대폰 인증 : 02-2033-8500 <a href=\"http://www.kmcert.com\" class=\"c-blue\" target=\"_blank\">(http://www.kmcert.com)</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li>- 아이핀 인증 : 1577-1006 <a href=\"http://www.siren24.com\" class=\"c-blue\" target=\"_blank\">(http://www.siren24.com)</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</div><!-- //.txt-certi -->\r\n");
      out.write("\t\t\t\t\t<div class=\"btn-wrap\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn-com\" data-bind=\"click: findPw\">비밀번호 찾기</button>\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn-com btn-cancel\" data-bind=\"click: cancel\">취소</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</fieldset>\r\n");
      out.write("\t\t\t</form><!-- //.frm-find.cer -->\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<form id=\"passwordForm\" class=\"frm-find\" data-bind=\"visible: foundPw()\">\r\n");
      out.write("\t\t\t\t<fieldset>\r\n");
      out.write("\t\t\t\t\t<legend class=\"blind\">비밀번호 변경</legend>\r\n");
      out.write("\t\t\t\t\t<span class=\"txt tac\">새로운 비밀번호를 입력해 주시기 바랍니다.</span>\r\n");
      out.write("\t\t\t\t\t<span class=\"txt tac2\">8자이상~16자 이내</span>\r\n");
      out.write("\t\t\t\t\t<div class=\"lg-input ofh\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"newPassword\">새비밀번호</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"password\" id=\"newPassword\" name=\"newPassword\" data-bind=\"value: newPassword, hasFocus: newPasswordFocus\">\r\n");
      out.write("\t\t\t\t\t\t<span class=\"txt-ps c-red error\"></span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"lg-input ofh\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"newPasswordConfirm\">비밀번호확인</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"password\" id=\"newPasswordConfirm\" name=\"newPasswordConfirm\" data-bind=\"value: newPasswordConfirm, hasFocus: newPasswordConfirmFocus\">\r\n");
      out.write("\t\t\t\t\t\t<span class=\"txt-ps c-red error\"></span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"btn-wrap\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn-com btn-ok\" data-bind=\"click: resetPassword\">확인</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</fieldset>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div><!-- //.ct-find -->\r\n");
      out.write("\t</div><!-- //.ly-pop -->\r\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /WEB-INF/layouts/biz/include.jsp(39,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty meJSON}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("\t\twindow['me'] = window['me'] || ");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${meJSON}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
        out.write(";\r\n");
        out.write("\t");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }
}
